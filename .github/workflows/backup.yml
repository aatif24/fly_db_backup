name: Backup to Cloudflare

on:
  schedule:
    # Runs daily at 14:30 UTC (adjust as needed)
    - cron: "30 14 * * *"
  workflow_dispatch: # Allows manual triggering
  push:
    branches:
      - main # Or your preferred branch

jobs:
  backup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x' # Or specify your exact Python version

      - name: Cache pip dependencies
        uses: actions/cache@v4
        id: cache-pip # Give the cache step an ID
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        # Run pip install only if cache wasn't restored or requirements changed
        run: pip install -r requirements.txt

      - name: Cache flyctl
        uses: actions/cache@v4
        id: cache-flyctl
        with:
          path: ~/.fly/bin # Default installation path for flyctl
          key: ${{ runner.os }}-flyctl-v1 # Increment version if install script changes

      - name: Install flyctl
        # Only run install if cache wasn't restored
        if: steps.cache-flyctl.outputs.cache-hit != 'true'
        run: |
          set -e # Exit immediately if a command exits with a non-zero status.
          echo "Installing flyctl..."
          curl -L https://fly.io/install.sh | sh
          # REMOVED PATH update from here
          echo "flyctl installation complete."

      - name: Add flyctl to PATH # ADDED unconditional step
        run: |
          echo "Adding $HOME/.fly/bin to GITHUB_PATH"
          echo "$HOME/.fly/bin" >> $GITHUB_PATH

      - name: Check PATH variable # Keep this for debugging
        run: echo "Current PATH=$PATH"

      - name: Cache PostgreSQL client
        uses: actions/cache@v4
        id: cache-postgres
        with:
          # Cache the apt package state and relevant directories
          path: |
            /var/cache/apt/archives
            /var/lib/apt/lists
            /usr/lib/postgresql* # Use wildcard for version flexibility
            /usr/share/postgresql*
            /usr/bin/pg_dump
            /usr/bin/psql
          key: ${{ runner.os }}-postgres-client-v1 # Increment version if needed

      - name: Install PostgreSQL client
        # Only run install if cache wasn't restored
        if: steps.cache-postgres.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install --yes --no-install-recommends postgresql-client

      - name: Verify flyctl installation
        run: |
          echo "Verifying flyctl installation..."
          which flyctl
          flyctl version

      - name: Run backup script
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          APP_NAME: ${{ secrets.APP_NAME }}
          PGPASSWORD: ${{ secrets.PGPASSWORD }}
          R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
          R2_ACCESS_ID: ${{ secrets.R2_ACCESS_ID }}
          R2_ACCESS_SECRET: ${{ secrets.R2_ACCESS_SECRET }}
          R2_BUCKET_NAME: ${{ secrets.R2_BUCKET_NAME }}
          UPTIME_HEARTBEAT: ${{ secrets.UPTIME_HEARTBEAT }} # Optional
        run: python backup.py
